---
- name: Update and Upgrade apt packages
  hosts: all
  tasks:
    - name: Update and Upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

- name: Install Docker
  hosts: all
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present
    
    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present
    
    - name: Print architecture variables
      ansible.builtin.debug:
        msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture)}}
          signed-by=/etc/apt/keyrings/docker.gpg]

          https://download.docker.com/linux/ubuntu {{ansible_lsb.codename}} stable
        filename: docker
        state: present
    
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Install Docker
      ansible.builtin.apt:
        name: 
          docker-ce
          docker-ce-cli
          containerd.io
          docker-buildx-plugin
          docker-compose-plugin
        state: present
        update_cache: yes
    
    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Log in to ghcr.io
      ansible.builtin.command: |
        echo "{{ ghcr_token }}" | docker login ghcr.io -u {{ ghcr_user }} --password-stdin
      vars_files:
        - vault.yml

- name: Install KinD
  hosts: all
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Download KinD binary
      ansible.builtin.get_url:
        url: https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-{{ arch_mapping[ansible_architecture] | default('amd64') }}
        dest: /tmp/kind
        mode: '0755'

    - name: Move KinD binary to /usr/local/bin
      ansible.builtin.command: mv /tmp/kind /usr/local/bin/kind
      args:
        creates: /usr/local/bin/kind

- name: Install kubectl
  hosts: all
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Download kubectl binary
      ansible.builtin.get_url:
        url: https://dl.k8s.io/release/v1.28.0/bin/linux/{{ arch_mapping[ansible_architecture] | default('amd64') }}/kubectl
        dest: /tmp/kubectl
        mode: '0755'

    - name: Install binary
      ansible.builtin.command: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      args:
        creates: /usr/local/bin/kubectl

