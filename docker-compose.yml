services:
  app:
    build: .
    image: ghcr.io/kianyari/devops:main
    container_name: devops_app
    restart: always
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    depends_on:
      - db

  db:
    image: postgres:17
    container_name: devops_db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  
  prometheus:
    image: prom/prometheus:main
    container_name: devops_prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alertmanager/rules.yml:/etc/prometheus/rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  
  alertmanager:
    image: prom/alertmanager:main
    container_name: devops_alertmanager
    restart: always
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/config.yml:/etc/alertmanager/config.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
  
  grafana:
    image: grafana/grafana:main
    container_name: devops_grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - Gf_USERS_ALLOW_SIGN_UP=false

    
volumes:
  db_data:
  prometheus_data:
  grafana_data:
  alertmanager_data: